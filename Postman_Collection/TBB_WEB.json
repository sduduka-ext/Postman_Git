{
	"info": {
		"_postman_id": "98cf30e6-89cc-4b40-bada-e7d4644e791a",
		"name": "TBB_WEB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35363578"
	},
	"item": [
		{
			"name": "US",
			"item": [
				{
					"name": "Order placement for new Customer with BBP Energize SKU - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"//var extfname=pm.iterationData.get('Firstname');\r",
											"var extfname=pm.variables.replaceIn('{{$randomFirstName}}');\r",
											"//var extlastname=pm.iterationData.get('Lastname');\r",
											"var extlastname=pm.variables.replaceIn('{{$randomLastName}}');\r",
											"var Email= fname+lname+\"_sp3pl@beachbodytest.com\";\r",
											"\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											" if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"pm.collectionVariables.set(\"guid\", jsondata.guid);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											" console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{email}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER</customerType>\r\n                    <sponsorREPID></sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerID\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerID\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											" \r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guid}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`Payload for BBP Energize SKU : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"    console.log(\"One year free trail -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRef\"));",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											"// Retrieve the values of the collection variables",
											"const iterno = pm.collectionVariables.get(\"iterno\");",
											"const guid = pm.collectionVariables.get(\"guid\");",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRef\")",
											"const email=pm.collectionVariables.get(\"email\");",
											"// Log the values to the console in the desired format",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`)",
											"",
											"console.log(`Order placement for BBP Energize SKU - iteration `)",
											"console.log(`GUID : ${guid}`);",
											"console.log(`Email : ${email}`);",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);",
											"//setting global variable to sent as json file for order creation details",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)",
											"// pm.globals.set(`EMAIL_${iterno+1}`,email,\"*\"+`${iterno+1}`)",
											"// pm.globals.set(`GUID_${iterno+1}`,guid,\"*\"+`${iterno+1}`)",
											"// pm.globals.set(`OrderNumber_${iterno+1}`,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRef\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRef}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRef}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 54.95,\r\n        \"orderShAmount\": 6.95,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guid}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRef}}\",\r\n            \"customerNo\": \"{{origSysDocumentRef}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{email}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRef}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDSUBBP2271\",\r\n                \"originalPrice\": 54.95,\r\n                \"retailPrice\": 54.95,\r\n                \"commissions\": \"10.99\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"42.00\",\r\n                \"pv\": \"33.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 54.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing customer - Order placement for GrowthDay Pro Annual membership - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"pm.collectionVariables.set(\"PhoneNumber\",\"{{TelephoneNumber}}\")\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"//var extfname=pm.iterationData.get('Firstname');\r",
											"var extfname=pm.variables.replaceIn('{{$randomFirstName}}');\r",
											"//var extlastname=pm.iterationData.get('Lastname');\r",
											"var extlastname=pm.variables.replaceIn('{{$randomLastName}}');\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"console.log(`Telephone>>> `+pm.collectionVariables.get(\"PhoneNumber\"));\r",
											"pm.collectionVariables.set(\"emailTBB\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											" if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"pm.collectionVariables.set(\"guidTBB\", jsondata.guid);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											" console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{PhoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerIDTBB\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBB\"))",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 129.95,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"{{Skupre}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Growthday Pro Annual membership (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB1\",sysnumber);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Growthday Pro Annual membership : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    //pm.expect(1).to.equal(2);\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB1\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for GrowthDay Pro Annual Membership TBB - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB1}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB1}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 299.00,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB1}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB1}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB1}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSGDAYANNU301\",\r\n                \"originalPrice\": 299.00,\r\n                \"retailPrice\": 299.00,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"74.75\",\r\n                \"cv\": \"224.00\",\r\n                \"pv\": \"125.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 299.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing Partner - Order placement for Shakeology for HD + special offers that are HD - TBB WEB - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"//var extfname=pm.iterationData.get('Firstname');\r",
											"var extfname=pm.variables.replaceIn('{{$randomFirstName}}');\r",
											"//var extlastname=pm.iterationData.get('Lastname');\r",
											"var extlastname=pm.variables.replaceIn('{{$randomLastName}}');\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailTBB1\", Email)\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											" if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"pm.collectionVariables.set(\"guidTBB1\", jsondata.guid);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											" console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB1}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,COACH</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//pm.collectionVariables.set(\"customerIDTBB1\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"pm.collectionVariables.set(\"coachID\", jsonData.searchUser.gncCoachID);\r",
											"//console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB1\"));\r",
											"console.log('coachID > > ' +pm.collectionVariables.get(\"coachID\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for coach partner (Pre-Requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRef\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp1\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp1\"));\r",
											"setTimeout(function(){}, [1000]);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Status code validation script\r",
											"var payload=pm.request.body\r",
											"console.log(`Payload for One year BODi free trail : `+ payload)\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											" console.log(\"one month plan with no coach pick -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRef\"));\r",
											"} else {\r",
											"    //pm.expect(1).to.equal(2);\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guid\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRef\")\r",
											"const email=pm.collectionVariables.get(\"email\");\r",
											"\r",
											"console.log(`GUID of one month plan with no coach pick iteration(us) ${iterno+1}: ${guid}`);\r",
											"console.log(`Email of one month plan with no coach pick iteration(US) ${iterno+1}: ${email}`);\r",
											"console.log(`Order ID of one month plan with no coach pick iteration(US) ${iterno+1}: ${\"QE_\"+orderid}`);\r",
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp1}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRef}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRef}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp1}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 39.95,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 3.20,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRef}}\",\r\n            \"customerNo\": \"{{origSysDocumentRef}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{email}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRef}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDMISCBSK1\",\r\n                \"originalPrice\": 39.95,\r\n                \"retailPrice\": 39.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 39.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Shakeology for HD + special offers that are HD (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB3\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Order placement for Shakeology for HD + special offers that are HD (TBB WEB) : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    //pm.expect(1).to.equal(2);\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB1\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB3\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB1\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Order placement for Shakeology for HD + special offers that are HD (TBB WEB) - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB3}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB3}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 184.90,\r\n        \"orderShAmount\": 8.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 1.80,\r\n        \"orderTaxAmount\": 1.80,\r\n        \"commissionableOrder\":\"TBB_NO_COACH_PICK\",\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB3}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB3}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB1}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB3}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"{{Skuid2}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB3}}\",\r\n                \"lineNumber\": 2,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"{{Skuid2.1}}\",\r\n                \"originalPrice\": 54.95,\r\n                \"retailPrice\": 54.95,\r\n                \"commissions\": \"10.99\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"42.00\",\r\n                \"pv\": \"33.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 54.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing customer - Order placement for Nutrition Entitlement: 2BMindset (TBB Web) - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailTBB2\", Email) "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											" if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBB2\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB2}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerIDTBB2\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [7000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)   ",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											"const iterno = pm.collectionVariables.get(\"iterno\");",
											"const guid = pm.collectionVariables.get(\"guidTBB2\");",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB4\")",
											"const email=pm.collectionVariables.get(\"emailTBB2\");",
											"",
											"console.log(`GUID of Order placement pre-requisite (us) ${iterno+1}: ${guid}`);",
											"console.log(`Email of Order placement pre-requisite (US) ${iterno+1}: ${email}`);",
											"console.log(`Order ID of Order placement pre-requisite (US) ${iterno+1}: ${\"QE_\"+orderid}`);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB4\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB4}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB4}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{Timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 129.95,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB2}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB4}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB4}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB2}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB4}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"{{Skupre}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Nutrition Entitlement: (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB5\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for Order placement for Nutrition Entitlement (US) : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    //pm.expect(1).to.equal(2);\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB2\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB5\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB2\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Nutrition Entitlement (US) - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "CkENBB6yZH3fxtFJRu2B09FQSvnZ0BMN8mZk6Son"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB5}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB5}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 59.95,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7169817407996980703955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBB5}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB2}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB5}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB5}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB2}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailTBB2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MD2BSTREAM7\",\r\n                \"lineReference\": \"ci7589000062\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"50.00\",\r\n                \"cv\": \"45.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 59.95,\r\n                \"itemPrice\": 59.95,\r\n                \"originalPrice\": 59.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"2B\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MD2BSTREAM\",\r\n                \"topModelLineReference\": \"ci7589000062\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Order placement for Nutrition Entitlement: UPF - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailTBB3\", Email)\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"pm.collectionVariables.set(\"guidTBB3\", jsondata.guid);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											" console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB3}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,CLUB</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDTBB3\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB3\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB3}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB6\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB6}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB6}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 129.95,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB3}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB6}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB6}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB3}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB3}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB6}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"{{Skupre}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Nutrition Entitlement: UPF (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB7\",sysnumber);\r",
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Order placement for Nutrition Entitlement: UPF (TBB WEB) US: `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"} else {\r",
											"    //pm.expect(1).to.equal(2);\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB3\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB7\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB3\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Nutrition Entitlement: UPF  (US) iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "CkENBB6yZH3fxtFJRu2B09FQSvnZ0BMN8mZk6Son"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB7}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB7}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 99.00,\r\n        \"orderShAmount\": 11.95,\r\n        \"orderTaxAmount\": 21.52,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 21.52,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7168328993826846103955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBB7}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB3}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB7}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB7}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB3}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailTBB3}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDFIXSTREAM5\",\r\n                \"lineReference\": \"ci7586000443\",\r\n                \"commissions\": \"19.8\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"74.00\",\r\n                \"cv\": \"74.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 99.00,\r\n                \"itemPrice\": 99.00,\r\n                \"originalPrice\": 99.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"UPF\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDFIXSTREAM\",\r\n                \"topModelLineReference\": \"ci7586000443\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            }\r\n        ],\r\n        \"adjustment\": []\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing PC - Order placement for Shake and Hustle (TBB WEB) - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailTBB4\", Email) "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBB4\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB4}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>PC,REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDTBB4\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB4\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB4}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement pcmember (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"    console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBB8\"))",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB8\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB8}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB8}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 15.95,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB4}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB8}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB8}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB4}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB4}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB8}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDPCMEMBER\",\r\n                \"originalPrice\": 15.95,\r\n                \"retailPrice\": 15.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 15.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Shake and Hustle (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB9\",sysnumber);\r",
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid5\")\r",
											"\r",
											"// Split the CSV data into rows\r",
											"const rows = csvData.trim().split('\\n');\r",
											"\r",
											"// Initialize an array to store the extracted Skuids\r",
											"const skuids = [];\r",
											"\r",
											"// Iterate over each row\r",
											"rows.forEach(row => {\r",
											"    // Split the row by comma to extract the Skuid\r",
											"    const skuid = row.trim().replace(',', ''); // Remove trailing comma if present\r",
											"    skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 3; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"//pm.collectionVariables.set(\"id1\",skuids[0])\r",
											"\r",
											"console.log('Extracted Skuid:', skuids);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var payload=pm.request.body\r",
											"console.log(`Payload for Order placement for Shake and Hustle   (US) iteration : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    //pm.expect(1).to.equal(2);\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB4\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB9\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB4\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Shakeology and Hustle   (US) iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"for (let i = 0; i < 3; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB9}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB9}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 129.95,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 10.46,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 10.46,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7156819781796488303955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBB9}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB4}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB9}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB9}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB4}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailTBB4}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSSHKBBP3101\",\r\n                \"lineReference\": \"ci7551000062\",\r\n                \"commissions\": \"25.99\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"90.00\",\r\n                \"cv\": \"90.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 129.95,\r\n                \"itemPrice\": 129.95,\r\n                \"originalPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENSHKBAG301\",\r\n                \"topModelLineReference\": \"ci7551000062\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENBBPPCK301\",\r\n                \"topModelLineReference\": \"ci7551000062\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            }\r\n        ],\r\n        \"adjustment\": []\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing customer - Coach Registration for BODi Essentials TSP - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailTBB5\", Email)\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBB5\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"    console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+pm.response.text);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB5}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,CLUB</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDTBB5\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB5\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        postman.setNextRequest(null);\r",
											"        throw e;  // Rethrow the exception to ensure the test is marked as failed\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB5}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											"setTimeout(function(){}, [7000]);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB10\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB10}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB10}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 129.95,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB5}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB10}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB10}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB5}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB5}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB10}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"{{Skupre}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "coach upgradation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for Upgrade customer  : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"     console.log(\"Upgrade Response -> \"+pm.response.text);\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [5000]);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate1\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(\"upgrade start date >>>\"+pm.collectionVariables.get(\"todayDate1\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:upgradeOIMIdentity>\r\n            <!--Optional:-->\r\n            <upgrade_identity_request>\r\n                <!--Optional:-->\r\n                <upgrade_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <guid>{{guidTBB5}}</guid>\r\n                    <customerType>COACH</customerType>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <upgradeType>CUSTOMER_TO_COACH</upgradeType>\r\n                    <originalCoachDate>{{todayDate1}}</originalCoachDate>\r\n                    <mostRecentCoachDate>{{todayDate1}}</mostRecentCoachDate>\r\n                </upgrade_account>\r\n            </upgrade_identity_request>\r\n        </prox:upgradeOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/upgrade",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"upgrade"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID Coach ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"coachID\", jsonData.searchUser.gncCoachID);\r",
											"\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB5}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Existing customer - Coach Registration for BODi Essentials TSP (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB11\",sysnumber);\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid6\")\r",
											"\r",
											"// Split the CSV data into rows\r",
											"const rows = csvData.trim().split('\\n');\r",
											"\r",
											"// Initialize an array to store the extracted Skuids\r",
											"const skuids = [];\r",
											"\r",
											"// Iterate over each row\r",
											"rows.forEach(row => {\r",
											"    // Split the row by comma to extract the Skuid\r",
											"    const skuid = row.trim().replace(',', ''); // Remove trailing comma if present\r",
											"    skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 8; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"//pm.collectionVariables.set(\"id1\",skuids[0])\r",
											"\r",
											"console.log('Extracted Skuid:', skuids);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Existing customer - Coach Registration for BODi Essentials TSP (TBB WEB) : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"//unsetting the skuids\r",
											"\r",
											"for (let i = 0; i < 8; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB5\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB11\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB5\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Coach Registration for BODi Essentials TSP (TBB WEB) (US) iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB11}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB11}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 199.00,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 12.40,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 12.40,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7146478381776691803954\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBB11}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB5}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB11}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailTBB5}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENTSP2\",\r\n                \"lineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1001,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENSHK3101\",\r\n                \"lineReference\": \"ci14472000033\",\r\n                \"topModelLineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"98.00\",\r\n                \"cv\": \"30.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"28.17\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 129.95,\r\n                \"itemPrice\": 118.08,\r\n                \"originalPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100101,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSSHKBAG302\",\r\n                \"topModelLineReference\": \"ci14472000033\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENSHKCUP01\",\r\n                \"topModelLineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 6.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 6.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENTSPBODI01\",\r\n                \"topModelLineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"33.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"33.02\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 179.00,\r\n                \"itemPrice\": 80.92,\r\n                \"originalPrice\": 179.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1004,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENBBCONT01\",\r\n                \"topModelLineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 9.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 9.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1005,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSEN2BTRK01\",\r\n                \"topModelLineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 14.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 14.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1006,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENBODIINS01\",\r\n                \"topModelLineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 20.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 20.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1007,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDMISCBSK2\",\r\n                \"topModelLineReference\": \"ci14472000032\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 0.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 0.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_PROMO_DISCOUNT\",\r\n                \"lineNumber\": \"1001\",\r\n                \"itemNumber\": \"MDUSENSHK3101\",\r\n                \"promotionId\": \"promo2370004\",\r\n                \"discountAmount\": 11.87,\r\n                \"promoDesc\": \"Item Discount\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1002\",\r\n                \"itemNumber\": \"MDUSENSHKCUP01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 6.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDUSENTSPBODI01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 89.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_PROMO_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDUSENTSPBODI01\",\r\n                \"promotionId\": \"promo2370004\",\r\n                \"discountAmount\": 8.13,\r\n                \"promoDesc\": \"Item Discount\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1004\",\r\n                \"itemNumber\": \"MDUSENBBCONT01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 9.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1005\",\r\n                \"itemNumber\": \"MDUSEN2BTRK01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 14.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1006\",\r\n                \"itemNumber\": \"MDUSENBODIINS01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 20.00,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing Customer - Coach Registration for Shakeology HD + special offers that are HD - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailTBB6\", Email)\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBB6\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+pm.responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB6}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDTBB6\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB6\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB6}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBB\"))",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 129.95,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB6}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB6}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB6}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"{{Skupre}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "coach upgradation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"var jsonData = pm.response.body;\r",
											"console.log(jsonData);\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"// Function to delay the next request\r",
											"function delayNextRequest(delayInMilliseconds) {\r",
											"    return new Promise(resolve => setTimeout(resolve, delayInMilliseconds));\r",
											"}\r",
											"\r",
											"// Set the delay (in milliseconds)\r",
											"const delay = 5000; // 5000 ms = 5 seconds\r",
											"\r",
											"// Set the next request to be executed\r",
											"const nextRequest = \"GNCID Coach ID\"; // Replace with the name of your next request\r",
											"\r",
											"// Delay the next request execution\r",
											"delayNextRequest(delay).then(() => postman.setNextRequest(nextRequest));\r",
											"\r",
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate1\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(\"upgrade start date >>>\"+pm.collectionVariables.get(\"todayDate1\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:upgradeOIMIdentity>\r\n            <!--Optional:-->\r\n            <upgrade_identity_request>\r\n                <!--Optional:-->\r\n                <upgrade_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <guid>{{guidTBB6}}</guid>\r\n                    <customerType>COACH</customerType>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <upgradeType>CUSTOMER_TO_COACH</upgradeType>\r\n                    <originalCoachDate>{{todayDate1}}</originalCoachDate>\r\n                    <mostRecentCoachDate>{{todayDate1}}</mostRecentCoachDate>\r\n                </upgrade_account>\r\n            </upgrade_identity_request>\r\n        </prox:upgradeOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/upgrade",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"upgrade"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID Coach ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"coachID\", jsonData.searchUser.gncCoachID);\r",
											"\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [7000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB6}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upgrade: Existing customer - Coach Registration for Shakeology HD + special offers that are HD (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [4000]);\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB13\",sysnumber);\r",
											"setTimeout(function(){}, [1000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"\r",
											"//Script to extract skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid7\")\r",
											"const rows = csvData.trim().split('\\n');\r",
											"const skuids = [];\r",
											"rows.forEach(row => {\r",
											"    \r",
											"    const skuid = row.trim().replace(',', ''); // Remove trailing comma if present\r",
											"    skuids.push(skuid);\r",
											"});\r",
											"//Setting variables to the Skuid\r",
											"for (let i = 0; i < 3; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"console.log('Extracted Skuid:', skuids);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Upgrade: Existing customer - Coach Registration for Shakeology HD + special offers that are HD (TBB WEB) : `+ payload)\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//unsetting the skuids\r",
											"\r",
											"for (let i = 0; i < 3; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB6\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB13\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB6\");\r",
											"\r",
											"console.log(`Order placement for Coach Registration for Shakeology HD + special offers that are HD(US) iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB13}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB13}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 179.08,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 14.66,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 14.66,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7135126895876549003954\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBB13}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB6}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB13}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailTBB6}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDMISCBSK1\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 39.95,\r\n                \"itemPrice\": 39.95,\r\n                \"originalPrice\": 39.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 2,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDSHK0202N1E102\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"90.00\",\r\n                \"cv\": \"20.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"16.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 129.95,\r\n                \"itemPrice\": 103.96,\r\n                \"originalPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 3,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDSUBBP3269\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"28.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 43.96,\r\n                \"itemPrice\": 35.17,\r\n                \"originalPrice\": 54.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"2\",\r\n                \"itemNumber\": \"MDSHK0202N1E102\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 25.99,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"3\",\r\n                \"itemNumber\": \"MDSUBBP3269\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 10.99,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"SPECIAL_OFFER_DISCOUNT\",\r\n                \"lineNumber\": \"3\",\r\n                \"itemNumber\": \"MDSUBBP3269\",\r\n                \"promotionId\": \"BBPEnergizeAllFlavorsUCGF\",\r\n                \"discountAmount\": 8.79,\r\n                \"promoDesc\": \"BBPEnergizeAllFlavors Special Offer - USCAGBFR Free Shipping\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing PC - Order placement for Nutrition Entitlement: UPF (TBB WEB) - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_sp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailTBB7\", Email)\r",
											"\r",
											"\r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`Create Identity API : \r",
											" {{CreateUserUrlXAPIKEY}} >>>> `+ pm.request.auth);\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBB7\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"    console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+pm.responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailTBB7}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>PC,REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid1}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID us",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDTBB7\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"coachID\", jsonData.searchUser.gncCoachID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBB7\"));\r",
											"console.log('coachID > > ' +pm.collectionVariables.get(\"coachID\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBB7}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"console.log(\"Order placement (pre-requisite) -> PC order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBB14\"))",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB14\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB14}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB14}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{Timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 15.95,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB7}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB14}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB14}}\",\r\n            \"customerType\": \"PC,REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB7}}\",\r\n            \"gncCoachId\": \"{{coachID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB7}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB14}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDPCMEMBER\",\r\n                \"originalPrice\": 15.95,\r\n                \"retailPrice\": 15.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 15.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Nutrition Entitlement: UPF (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBB15\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Order placement for Nutrition Entitlement: UPF (TBB WEB) : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBB7\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBB15\")\r",
											"const email=pm.collectionVariables.get(\"emailTBB7\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Nutrition Entitlement: UPF (With sponserrepid 10326)(US) iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBB15}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB15}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 99.00,\r\n        \"orderShAmount\": 6.95,\r\n        \"orderTaxRate\": 0.00,\r\n        \"totalTaxAmount\": 10.86,\r\n        \"orderTaxAmount\": 10.86,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBB7}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB15}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBB15}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBB7}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailTBB7}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB15}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDFIXSTREAM5\",\r\n                \"lineReference\":\"ci14089000129\",\r\n                \"originalPrice\": 99.00,\r\n                \"retailPrice\": 99.00,\r\n                \"commissions\": \"19.8\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"74.00\",\r\n                \"pv\": \"74.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 99.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBB15}}\",\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDFIXSTREAM\",\r\n                \"topModelLineReference\":\"ci14089000129\",\r\n                \"originalPrice\": 0,\r\n                \"retailPrice\": 0,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CA",
			"item": [
				{
					"name": "Existing customer - Order placement for GrowthDay Pro Annual membership - CA",
					"item": [
						{
							"name": "Usercreation CA TBB",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_casp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailCA\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBBCA\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"    console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+pm.response.body);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"});\r",
											"\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailCA}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID TBBCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerIDTBBCA\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBBCA\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"\r",
											"        throw e;  \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBBCA}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"CommissionableOrder\": \"LEAD_RULE\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 48.80,\r\n        \"orderShAmount\": 9.95,\r\n        \"orderTaxRate\": 0.00,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 7.63,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"0932253342096140093420\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBBCA}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n\t\t\t\"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailCA}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCABAR2111\",\r\n                \"originalPrice\": 48.80,\r\n                \"retailPrice\": 48.80,\r\n                \"commissions\": \"7.96\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"16.00\",\r\n                \"pv\": \"30.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 48.80,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Growthday Pro Annual membership (TBB WEB) CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [3000]);\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA1\",sysnumber);\r",
											"\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBBCA\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBBCA1\")\r",
											"const email=pm.collectionVariables.get(\"emailCA\");\r",
											"\r",
											"console.log(`Order placement for Growthday Pro Annual membership (TBB WEB) CA iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA1}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA1}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"commissionableOrder\":\"LEAD_RULE\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 373.75,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 48.59,\r\n        \"orderTaxAmount\": 48.59,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA1}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA1}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBBCA}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailCA}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA1}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAGDAYANNU301\",\r\n                \"originalPrice\": 373.75,\r\n                \"retailPrice\": 373.75,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 373.75,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing Partner - Order placement for Shakeology for HD + special offers that are HD - CA",
					"item": [
						{
							"name": "Usercreation CA TBB",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_casp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailCA1\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBBCA1\", jsondata.guid);\r",
											"\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"    \r",
											"});\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailCA1}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,COACH</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID TBBCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//pm.collectionVariables.set(\"customerIDTBBCA1\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"pm.collectionVariables.set(\"coachIDTBBCA\", jsonData.searchUser.gncCoachID);\r",
											"\r",
											"console.log('coachIDTBBCA > > ' +pm.collectionVariables.get(\"coachIDTBBCA\"));\r",
											"//console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBBCA1\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBBCA1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement Coach Partner sku(pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA2\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBBCA2\"))\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA2}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA2}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"CommissionableOrder\": \"LEAD_RULE\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 0.00,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"0932253342096140093420\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA2}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA2}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachIDTBBCA}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailCA1}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA2}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAMISCBSK1\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 0.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 49.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"SALE_DISCOUNT\",\r\n                \"lineNumber\": \"1\",\r\n                \"itemNumber\": \"MDCAMISCBSK1\",\r\n                \"promotionId\": \"promo1380005\",\r\n                \"discountAmount\": 49.95,\r\n                \"promoDesc\": \"NONE\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Shakeology for HD + special offers that are HD (TBB WEB) CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA3\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Order placement for Shakeology for HD + special offers that are HD (TBB WEB) CA : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBBCA1\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBBCA3\")\r",
											"const email=pm.collectionVariables.get(\"emailCA1\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Shakeology for HD + special offers that are HD (TBB WEB) CA - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA3}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA3}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 150.12,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 12.00,\r\n        \"orderTaxAmount\": 12.00,\r\n        \"commissionableOrder\":\"TBB_NO_COACH_PICK\",\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA3}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA3}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachIDTBBCA}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailCA1}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA3}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDSHK0204V1F101\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"20.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 103.96,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n             {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA3}}\",\r\n                \"lineNumber\": 2,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCASUBBP3140\",\r\n                \"originalPrice\": 54.95,\r\n                \"retailPrice\": 54.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"42.00\",\r\n                \"pv\": \"28.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 46.16,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"1\",\r\n                \"itemNumber\": \"MDSHK0204V1F101\",\r\n                \"promotionId\": \"TIER_DISCOUNT\",\r\n                \"discountAmount\": 25.99,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"SPECIAL_OFFER_DISCOUNT\",\r\n                \"lineNumber\": \"2\",\r\n                \"itemNumber\": \"MDCASUBBP3140\",\r\n                \"promotionId\": \"BBPEnergizeAllFlavorsUCGF\",\r\n                \"discountAmount\": 8.79,\r\n                \"promoDesc\": \"BBPEnergizeAllFlavors Special Offer - USCAGBFR Free Shipping\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing PC - Order placement for Shake and Hustle (TBB WEB) - CA",
					"item": [
						{
							"name": "Usercreation CA TBB",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_casp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailCA2\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBBCA2\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"    console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+pm.response.text);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"});\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailCA2}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>PC,REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid0}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID TBBCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerIDTBBCA2\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"coachID\", jsonData.searchUser.gncCoachID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBBCA2\"));\r",
											"console.log('coachID > > ' +pm.collectionVariables.get(\"coachID\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBBCA2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement PC sku (pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA4\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"    console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBBCA4\"));\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA4}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA4}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 17.95,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxAmount\": 2.69,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 2.69,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7230538535766288503955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBBCA4}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA2}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA4}}\",\r\n            \"customerType\": \"PC\",\r\n            \"gncCoachId\": \"{{coachID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailCA2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAPCMEMBER\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 17.95,\r\n                \"itemPrice\": 17.95,\r\n                \"originalPrice\": 17.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": []\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Shake and Hustle (TBB WEB) CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA5\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid3\")\r",
											"\r",
											"const rows = csvData.trim().split('\\n');\r",
											"const skuids = [];\r",
											"rows.forEach(row => {\r",
											"    \r",
											"    const skuid = row.trim().replace(',', '');     skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 3; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"console.log('Extracted Skuid:', skuids);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Order placement for Shake and Hustle (TBB WEB) CA Payload : `+ payload)\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//unsetting the skuids\r",
											"\r",
											"for (let i = 0; i < 3; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBBCA2\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBBCA5\")\r",
											"const email=pm.collectionVariables.get(\"emailCA2\");\r",
											"\r",
											"console.log(`Order placement for Shake and Hustle (TBB WEB) CA - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA5}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA5}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 155.95,\r\n        \"orderShAmount\": 29.95,\r\n        \"orderTaxAmount\": 16.16,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 155.95,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7152181819736336103955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBBCA5}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA2}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA5}}\",\r\n            \"customerType\": \"REGISTEREDUSER,PC\",\r\n            \"gncCustomerId\": \"{{customerIDTBBCA2}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailCA2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCASHKBBP3101\",\r\n                \"lineReference\": \"ci7531000105\",\r\n                \"commissions\": \"25.99\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"90.00\",\r\n                \"cv\": \"90.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 155.95,\r\n                \"itemPrice\": 155.95,\r\n                \"originalPrice\": 155.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHKBAG302\",\r\n                \"topModelLineReference\": \"ci7531000105\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENBBPPCK301\",\r\n                \"topModelLineReference\": \"ci7531000105\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            }\r\n        ],\r\n        \"adjustment\": []\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing customer - Coach Registration for BODi Essentials TSP - CA",
					"item": [
						{
							"name": "Usercreation CA TBB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBBCA3\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"    console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+pm.response.text);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"});\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_casp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailCA3\", Email)\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailCA3}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,CLUB</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID TBBCA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerIDTBBCA3\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBBCA3\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBBCA3}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA4\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"    console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBBCA4\"));\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA4}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA4}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 48.80,\r\n        \"orderShAmount\": 9.95,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 7.63,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7230538535766288503955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBBCA4}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA3}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA4}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBBCA3}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailCA3}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA4}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCABAR2111\",\r\n                \"originalPrice\": 48.80,\r\n                \"retailPrice\": 48.80,\r\n                \"commissions\": \"7.96\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"16.00\",\r\n                \"pv\": \"30.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 48.80,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": []\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "coach upgradation CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Upgrade Payload : `+ payload)\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"    console.log(`Upgrade Payload : `+ pm.response.body);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:upgradeOIMIdentity>\r\n            <!--Optional:-->\r\n            <upgrade_identity_request>\r\n                <!--Optional:-->\r\n                <upgrade_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <guid>{{guidTBBCA3}}</guid>\r\n                    <customerType>COACH</customerType>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <upgradeType>CUSTOMER_TO_COACH</upgradeType>\r\n                    <originalCoachDate>{{todayDate}}</originalCoachDate>\r\n                    <mostRecentCoachDate>{{todayDate}}</mostRecentCoachDate>\r\n                </upgrade_account>\r\n            </upgrade_identity_request>\r\n        </prox:upgradeOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/upgrade",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"upgrade"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID Coach ID CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"coachIDTBBCA\", jsonData.searchUser.gncCoachID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('coachIDTBBCA > > ' +pm.collectionVariables.get(\"coachIDTBBCA\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBBCA3}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Existing customer - Coach Registration for BODi Essentials TSP (TBB WEB) CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [4000]);\r",
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA7\",sysnumber);\r",
											"//Script to extract skuids\r",
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid4\")\r",
											"\r",
											"const rows = csvData.trim().split('\\n');\r",
											"const skuids = [];\r",
											"rows.forEach(row => {\r",
											"    \r",
											"    const skuid = row.trim().replace(',', '');     skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 8; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"console.log('Extracted Skuid:', skuids);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Coach Registration for BODi Essentials TSP (TBB WEB) CA : `+ payload)\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBBCA3\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBBCA7\")\r",
											"const email=pm.collectionVariables.get(\"emailCA3\");\r",
											"\r",
											"//unsetting the skuids\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Existing customer - Coach Registration for BODi Essentials TSP (TBB WEB) CA - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"for (let i = 0; i < 8; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA7}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA7}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 237.00,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 18.97,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 18.97,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7146478381776691803954\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBBCA7}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA3}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA7}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachIDTBBCA}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailCA3}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENTSP2\",\r\n                \"lineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1001,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHKHUSTLE\",\r\n                \"lineReference\": \"ci14495000004\",\r\n                \"topModelLineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"98.00\",\r\n                \"cv\": \"30.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"28.59\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 155.95,\r\n                \"itemPrice\": 143.81,\r\n                \"originalPrice\": 155.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100101,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHKBAG302\",\r\n                \"topModelLineReference\": \"ci14495000004\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100102,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENBBPPCK301\",\r\n                \"topModelLineReference\": \"ci14495000004\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHKCUP01\",\r\n                \"topModelLineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 8.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 8.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENTSPBODI01\",\r\n                \"topModelLineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"33.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"33.51\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 215.00,\r\n                \"itemPrice\": 93.19,\r\n                \"originalPrice\": 215.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1004,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENBBCONT01\",\r\n                \"topModelLineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 11.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 11.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1005,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAEN2BTRK01\",\r\n                \"topModelLineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 17.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 17.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1006,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENBODIINS01\",\r\n                \"topModelLineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 24.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 24.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1007,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAMISCBSK2\",\r\n                \"topModelLineReference\": \"ci14495000003\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 0.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 0.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_PROMO_DISCOUNT\",\r\n                \"lineNumber\": \"1001\",\r\n                \"itemNumber\": \"MDCAENSHKHUSTLE\",\r\n                \"promotionId\": \"promo2370004\",\r\n                \"discountAmount\": 12.14,\r\n                \"promoDesc\": \"Item Discount\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1002\",\r\n                \"itemNumber\": \"MDCAENSHKCUP01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 8.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDCAENTSPBODI01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 113.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_PROMO_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDCAENTSPBODI01\",\r\n                \"promotionId\": \"promo2370004\",\r\n                \"discountAmount\": 7.86,\r\n                \"promoDesc\": \"Item Discount\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1004\",\r\n                \"itemNumber\": \"MDCAENBBCONT01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 11.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1005\",\r\n                \"itemNumber\": \"MDCAEN2BTRK01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 17.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1006\",\r\n                \"itemNumber\": \"MDCAENBODIINS01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 24.00,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"2\",\r\n                \"itemNumber\": \"MD2BMSB202401\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 7.00,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            }            \r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing customer - Coach Registration for Shakeology HD + special offers that are HD - CA",
					"item": [
						{
							"name": "Usercreation CA TBB",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_casp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailCA4\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											" //Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidTBBCA4\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"     console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+pm.response.text);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"});\r",
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "wcopmakQgX9t0y00HCaQu1uojhd8oKSJanx4S5eI"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailCA4}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID TBBCA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerIDTBBCA4\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDTBBCA4  \"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBBCA4}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA8\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBBCA8\"))\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA8}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA8}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"CommissionableOrder\": \"LEAD_RULE\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 48.80,\r\n        \"orderShAmount\": 9.95,\r\n        \"orderTaxRate\": 0.00,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 7.63,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"0932253342096140093420\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA4}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA8}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA8}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDTBBCA4}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailCA4}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA8}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCABAR2111\",\r\n                \"originalPrice\": 48.80,\r\n                \"retailPrice\": 48.80,\r\n                \"commissions\": \"7.96\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"16.00\",\r\n                \"pv\": \"30.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 48.80,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "coach upgradation CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Upgrade Payload : `+ payload)\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\\n\"+responseBody);\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [2000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:upgradeOIMIdentity>\r\n            <!--Optional:-->\r\n            <upgrade_identity_request>\r\n                <!--Optional:-->\r\n                <upgrade_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <guid>{{guidTBBCA4}}</guid>\r\n                    <customerType>COACH</customerType>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <upgradeType>CUSTOMER_TO_COACH</upgradeType>\r\n                    <originalCoachDate>{{todayDate}}</originalCoachDate>\r\n                    <mostRecentCoachDate>{{todayDate}}</mostRecentCoachDate>\r\n                </upgrade_account>\r\n            </upgrade_identity_request>\r\n        </prox:upgradeOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/upgrade",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"upgrade"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID Coach ID CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"setTimeout(function(){}, [7000]);\r",
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"coachIDTBBCA1\", jsonData.searchUser.gncCoachID);\r",
											"console.log(\"coachIDTBBCA1 >>> \"+pm.collectionVariables.get(\"coachIDTBBCA1\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [7000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidTBBCA4}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upgrade: Existing customer - Coach Registration for Shakeology HD + special offers that are HD (TBB WEB) CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [400]);\r",
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBCA9\",sysnumber);\r",
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid5\")\r",
											"\r",
											"const rows = csvData.trim().split('\\n');\r",
											"const skuids = [];\r",
											"rows.forEach(row => {\r",
											"    \r",
											"    const skuid = row.trim().replace(',', '');     skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 3; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"console.log('Extracted Skuid:', skuids);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for Upgrade: Existing customer - Coach Registration for Shakeology HD + special offers that are HD (TBB WEB) CA : `+ payload)\r",
											"\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidTBBCA4\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefTBBCA9\")\r",
											"const email=pm.collectionVariables.get(\"emailCA4\");\r",
											"\r",
											"console.log(`Existing customer - Coach Registration for Shakeology HD + special offers that are HD (TBB WEB) CA - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//unsetting the skuids\r",
											"for (let i = 0; i < 3; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBCA9}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBCA9}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 179.08,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 14.66,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 14.66,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7135126895876549003954\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefTBBCA9}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidTBBCA4}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBCA9}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachIDTBBCA1}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailCA4}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAMISCBSK1\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 39.95,\r\n                \"itemPrice\": 39.95,\r\n                \"originalPrice\": 39.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 2,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDSHK0204V1F101\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"90.00\",\r\n                \"cv\": \"20.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"16.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 129.95,\r\n                \"itemPrice\": 103.96,\r\n                \"originalPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 3,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCASUBBP3140\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"28.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 43.96,\r\n                \"itemPrice\": 35.17,\r\n                \"originalPrice\": 54.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"2\",\r\n                \"itemNumber\": \"MDSHK0204V1F101\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 25.99,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"3\",\r\n                \"itemNumber\": \"MDCASUBBP3140\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 10.99,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"SPECIAL_OFFER_DISCOUNT\",\r\n                \"lineNumber\": \"3\",\r\n                \"itemNumber\": \"MDCASUBBP3140\",\r\n                \"promotionId\": \"BBPEnergizeAllFlavorsUCGF\",\r\n                \"discountAmount\": 8.79,\r\n                \"promoDesc\": \"BBPEnergizeAllFlavors Special Offer - USCAGBFR Free Shipping\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "GB",
			"item": [
				{
					"name": "Existing customer - Coach Registration for BODi Essentials TSP - GB",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_gbsp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailGB\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidGB\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailGB}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,CLUB</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID GB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"customerIDGB\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDGB\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidGB}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefGB\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefGB\"))\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefGB}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefGB}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n        \"orderType\": \"WEB ORDER_NT_UK\",\r\n        \"CommissionableOrder\": \"LEAD_RULE\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 14.95,\r\n        \"orderShAmount\": 6.95,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 1.80,\r\n        \"orderTaxAmount\": 1.80,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"0932253342096140093530\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"GBP\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidGB}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefGB}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefGB}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDGB}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailGB}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefGB}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"{{Skuidpre}}\",\r\n                \"originalPrice\": 14.95,\r\n                \"retailPrice\": 14.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 14.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "coach upgradation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Upgrade Payload : `+ payload)\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\\n\"+responseBody);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [5000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [2000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:upgradeOIMIdentity>\r\n            <!--Optional:-->\r\n            <upgrade_identity_request>\r\n                <!--Optional:-->\r\n                <upgrade_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <guid>{{guidGB}}</guid>\r\n                    <customerType>COACH</customerType>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <upgradeType>CUSTOMER_TO_COACH</upgradeType>\r\n                    <originalCoachDate>{{todayDate}}</originalCoachDate>\r\n                    <mostRecentCoachDate>{{todayDate}}</mostRecentCoachDate>\r\n                </upgrade_account>\r\n            </upgrade_identity_request>\r\n        </prox:upgradeOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/upgrade",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"upgrade"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID Coach ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"pm.collectionVariables.set(\"coachIDGB\", jsonData.searchUser.gncCoachID);\r",
											"console.log('coachIDGB > > ' +pm.collectionVariables.get(\"coachIDGB\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    \r",
											"});\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        pm.execution.setNextRequest(null) \r",
											"        throw e;  // Rethrow the exception to ensure the test is marked as failed\r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidGB}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Existing customer - Coach Registration for BODi Essentials TSP (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [4000]);\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefGB1\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid1\")\r",
											"\r",
											"const rows = csvData.trim().split('\\n');\r",
											"const skuids = [];\r",
											"rows.forEach(row => {\r",
											"    \r",
											"    const skuid = row.trim().replace(',', '');     skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 8; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"console.log('Extracted Skuid:', skuids);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for Coach Registration for BODi Essentials TSP (TBB WEB) GB : `+ payload)\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidGB\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefGB1\")\r",
											"const email=pm.collectionVariables.get(\"emailGB\");\r",
											"\r",
											"console.log(`GUID of Coach Registration for BODi Essentials TSP(GB) iteration ${iterno+1}: ${guid}`);\r",
											"console.log(`Email Coach Registration for BODi Essentials TSP(GB) iteration ${iterno+1}: ${email}`);\r",
											"console.log(`Order ID Coach Registration for BODi Essentials TSP (GB) iteration ${iterno+1}: ${\"QE_\"+orderid}`);\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Coach Registration for BODi Essentials TSP (TBB) GB - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"\r",
											"for (let i = 0; i < 8; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefGB1}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefGB1}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n        \"orderType\": \"WEB ORDER_NT_UK\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 161.38,\r\n        \"orderShAmount\": 3.50,\r\n        \"orderTaxAmount\": 13.30,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 13.30,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7146478381776691803954\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefGB1}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"GBP\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidGB}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefGB1}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachIDGB}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailGB}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBENTSP2\",\r\n                \"lineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1001,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBENSHK3101\",\r\n                \"lineReference\": \"ci14475000011\",\r\n                \"topModelLineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"98.00\",\r\n                \"cv\": \"29.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"27.58\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 108.29,\r\n                \"itemPrice\": 96.29,\r\n                \"originalPrice\": 108.29,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100101,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBSHKBAG302\",\r\n                \"topModelLineReference\": \"ci14475000011\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBENSHKCUP01\",\r\n                \"topModelLineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 5.79,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 5.79,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBENTSPBODI01\",\r\n                \"topModelLineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"32.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"32.33\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 149.17,\r\n                \"itemPrice\": 65.09,\r\n                \"originalPrice\": 149.17,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1004,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBENBBCONT01\",\r\n                \"topModelLineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 8.29,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 8.29,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1005,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBEN2BTRK01\",\r\n                \"topModelLineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 12.46,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 12.46,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1006,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDGBENBODIINS01\",\r\n                \"topModelLineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 20.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 20.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1007,\r\n                \"offerCode\": \"GB-REGISTEREDUSER-GBP\",\r\n                \"itemNumber\": \"MDUKMISCBSK2\",\r\n                \"topModelLineReference\": \"ci14475000010\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 0.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 0.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_PROMO_DISCOUNT\",\r\n                \"lineNumber\": \"1001\",\r\n                \"itemNumber\": \"MDGBENSHK3101\",\r\n                \"promotionId\": \"promo2370004\",\r\n                \"discountAmount\": 12.00,\r\n                \"promoDesc\": \"Item Discount\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1002\",\r\n                \"itemNumber\": \"MDGBENSHKCUP01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 5.79,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDGBENTSPBODI01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 76.08,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_PROMO_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDGBENTSPBODI01\",\r\n                \"promotionId\": \"promo2370004\",\r\n                \"discountAmount\": 8.00,\r\n                \"promoDesc\": \"Item Discount\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1004\",\r\n                \"itemNumber\": \"MDGBENBBCONT01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 8.29,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1005\",\r\n                \"itemNumber\": \"MDGBEN2BTRK01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 12.46,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1006\",\r\n                \"itemNumber\": \"MDGBENBODIINS01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 20.00,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "FR",
			"item": [
				{
					"name": "Existing Partner - Order placement for Performance HD - FR",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_frsp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailFR\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidFR\", jsondata.guid);\r",
											"\r",
											"\r",
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"    console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"});\r",
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n\r\n\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailFR}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,COACH</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_US</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request\");\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"\tconsole.log(`response.body is ${pm.response.body}`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"}\r",
											"//pm.collectionVariables.set(\"customerIDFR\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"pm.collectionVariables.set(\"coachIDFR\", jsonData.searchUser.gncCoachID);\r",
											"console.log('coachIDFR > > ' +pm.collectionVariables.get(\"coachIDFR\"));\r",
											"//console.log('customerIDFR > > ' +pm.collectionVariables.get(\"customerIDFR\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidFR}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement Coach Partner sku(pre-requisite) Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefTBBFR\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Payload : `+ payload)\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefTBBCA2\"))\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefTBBFR}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBFR}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"FR-REGISTEREDUSER-EUR\",\r\n        \"orderType\": \"WEB ORDER_NT_FR\",\r\n        \"CommissionableOrder\": \"LEAD_RULE\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 37.46,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxAmount\": 7.49,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 7.49,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"0932253342096140093420\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"EUR\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidFR}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBFR}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefTBBFR}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachIDFR}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailFR}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefTBBFR}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"FR-REGISTEREDUSER-EUR\",\r\n                \"itemNumber\": \"MDFRMISCBSK1\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 37.46,\r\n                \"itemPrice\": 37.46,\r\n                \"originalPrice\": 37.46,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": []\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Performance HD (TBB WEB)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefFR\",sysnumber);\r",
											"\r",
											"setTimeout(function(){}, [400]);\r",
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Order placement for Performance HD (TBB WEB) FR : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidFR\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefFR\")\r",
											"const email=pm.collectionVariables.get(\"emailFR\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Performance HD (FR) - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"//setting global variable to sent as json file for order creation details\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"TBB WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefFR}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefFR}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"FR-REGISTEREDUSER-EUR\",\r\n        \"orderType\": \"WEB ORDER_NT_FR\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 108.96,\r\n        \"orderShAmount\": 3.50,\r\n        \"orderTaxAmount\": 6.18,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 6.18,\r\n        \"commissionableOrder\":\"TBB_NO_COACH_PICK\",\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7156846680746052203955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefFR}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"EUR\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidFR}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefFR}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{coachIDFR}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailFR}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"FR-REGISTEREDUSER-EUR\",\r\n                \"itemNumber\": \"MDFRSUBBP3131\",\r\n                \"lineReference\": \"ci7551000068\",\r\n                \"commissions\": \"22.99\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"94.00\",\r\n                \"cv\": \"74.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 108.96,\r\n                \"itemPrice\": 108.96,\r\n                \"originalPrice\": 108.96,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"FR-REGISTEREDUSER-EUR\",\r\n                \"itemNumber\": \"MDFRSUBBP3128\",\r\n                \"topModelLineReference\": \"ci7551000068\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"FR-REGISTEREDUSER-EUR\",\r\n                \"itemNumber\": \"MDFRSUBBP3130\",\r\n                \"topModelLineReference\": \"ci7551000068\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            }\r\n        ],\r\n        \"adjustment\": []\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "randomdigit",
			"value": ""
		},
		{
			"key": "emailCA",
			"value": ""
		},
		{
			"key": "guidTBBCA",
			"value": ""
		},
		{
			"key": "iterno",
			"value": ""
		},
		{
			"key": "customerIDTBBCA",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA1",
			"value": ""
		},
		{
			"key": "emailCA1",
			"value": ""
		},
		{
			"key": "guidTBBCA1",
			"value": ""
		},
		{
			"key": "customerIDTBBCA1",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA2",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA3",
			"value": ""
		},
		{
			"key": "emailCA2",
			"value": ""
		},
		{
			"key": "guidTBBCA2",
			"value": ""
		},
		{
			"key": "customerIDTBBCA2",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA4",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA5",
			"value": ""
		},
		{
			"key": "emailCA3",
			"value": ""
		},
		{
			"key": "guidTBBCA3",
			"value": ""
		},
		{
			"key": "customerIDTBBCA3",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA6",
			"value": ""
		},
		{
			"key": "coachIDTBBCA",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA7",
			"value": ""
		},
		{
			"key": "emailCA4",
			"value": ""
		},
		{
			"key": "guidTBBCA4",
			"value": ""
		},
		{
			"key": "customerIDTBBCA4",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA8",
			"value": ""
		},
		{
			"key": "coachIDTBBCA1",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBBCA9",
			"value": ""
		},
		{
			"key": "emailFR",
			"value": ""
		},
		{
			"key": "guidFR",
			"value": ""
		},
		{
			"key": "customerIDFR",
			"value": ""
		},
		{
			"key": "origSysDocumentRefFR",
			"value": ""
		},
		{
			"key": "origSysDocumentRefFR1",
			"value": ""
		},
		{
			"key": "emailTBB",
			"value": ""
		},
		{
			"key": "guidTBB",
			"value": ""
		},
		{
			"key": "customerIDTBB",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB1",
			"value": ""
		},
		{
			"key": "emailTBB1",
			"value": ""
		},
		{
			"key": "guidTBB1",
			"value": ""
		},
		{
			"key": "customerIDTBB1",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB2",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB3",
			"value": ""
		},
		{
			"key": "emailTBB2",
			"value": ""
		},
		{
			"key": "guidTBB2",
			"value": ""
		},
		{
			"key": "customerIDTBB2",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB4",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB5",
			"value": ""
		},
		{
			"key": "emailTBB3",
			"value": ""
		},
		{
			"key": "guidTBB3",
			"value": ""
		},
		{
			"key": "customerIDTBB3",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB6",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB7",
			"value": ""
		},
		{
			"key": "emailTBB4",
			"value": ""
		},
		{
			"key": "guidTBB4",
			"value": ""
		},
		{
			"key": "customerIDTBB4",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB8",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB9",
			"value": ""
		},
		{
			"key": "emailTBB5",
			"value": ""
		},
		{
			"key": "guidTBB5",
			"value": ""
		},
		{
			"key": "customerIDTBB5",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB10",
			"value": ""
		},
		{
			"key": "coachID",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB11",
			"value": ""
		},
		{
			"key": "emailTBB6",
			"value": ""
		},
		{
			"key": "guidTBB6",
			"value": ""
		},
		{
			"key": "customerIDTBB6",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB12",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB13",
			"value": ""
		},
		{
			"key": "emailTBB7",
			"value": ""
		},
		{
			"key": "guidTBB7",
			"value": ""
		},
		{
			"key": "customerIDTBB7",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB14",
			"value": ""
		},
		{
			"key": "origSysDocumentRefTBB15",
			"value": ""
		},
		{
			"key": "emailGB",
			"value": ""
		},
		{
			"key": "guidGB",
			"value": ""
		},
		{
			"key": "customerIDGB",
			"value": ""
		},
		{
			"key": "origSysDocumentRefGB",
			"value": ""
		},
		{
			"key": "coachIDGB",
			"value": ""
		},
		{
			"key": "origSysDocumentRefGB1",
			"value": ""
		},
		{
			"key": "origSysDocumentRef",
			"value": ""
		},
		{
			"key": "timestamp",
			"value": ""
		}
	]
}
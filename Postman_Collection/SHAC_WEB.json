{
	"info": {
		"_postman_id": "eca7409c-c45a-4cb4-aaa1-d70241e618c3",
		"name": "SHAC_WEB Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13066979"
	},
	"item": [
		{
			"name": "US",
			"item": [
				{
					"name": "New customer - Order placement for BODi Essentials TSP - US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_shacus@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailSH\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidSH\", jsondata.guid);\r",
											"\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailSH}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,CLUB</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_CA</preferredLanguage>\r\n                    <telephoneNumber>{{Phone}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID US",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDSH\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDSH\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidSH}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for BODi Essentials TSP",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefSH\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid1\")\r",
											"\r",
											"// Split the CSV data into rows\r",
											"const rows = csvData.trim().split('\\n');\r",
											"\r",
											"// Initialize an array to store the extracted Skuids\r",
											"const skuids = [];\r",
											"\r",
											"// Iterate over each row\r",
											"rows.forEach(row => {\r",
											"    // Split the row by comma to extract the Skuid\r",
											"    const skuid = row.trim().replace(',', ''); // Remove trailing comma if present\r",
											"    skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 8; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"//pm.collectionVariables.set(\"id1\",skuids[0])\r",
											"\r",
											"console.log('Extracted Skuid:', skuids);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`OI Order placement for BODi Essentials TSP Payload : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefSH\"))\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"//unsetting the skuids\r",
											"\r",
											"for (let i = 0; i < 8; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidSH\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefSH\")\r",
											"const email=pm.collectionVariables.get(\"emailSH\");\r",
											"\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for BODi Essentials TSP(us) for SHAC - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"\r",
											"pm.globals.set(`GUID_${iterno+1} -> `+guid,`OrderNumber_${iterno+1} -> ${\"QE_\"+orderid}`,\"*\"+`${iterno+1}`)\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefSH}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 219.00,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 12.63,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 12.63,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7145930748926626103954\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefSH}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSH}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefSH}}\",\r\n            \"customerType\": \"CLUB\",\r\n            \"gncCustomerId\": \"{{customerIDSH}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailSH}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENTSP2\",\r\n                \"lineReference\": \"ci7508000028\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1001,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENSHK3101\",\r\n                \"lineReference\": \"ci7508000029\",\r\n                \"topModelLineReference\": \"ci7508000028\",\r\n                \"commissions\": \"31.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"98.00\",\r\n                \"cv\": \"33.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 129.95,\r\n                \"itemPrice\": 129.95,\r\n                \"originalPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100101,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSSHKBAG302\",\r\n                \"topModelLineReference\": \"ci7508000029\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENSHKCUP01\",\r\n                \"topModelLineReference\": \"ci7508000028\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 6.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 6.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENTSPBODI01\",\r\n                \"topModelLineReference\": \"ci7508000028\",\r\n                \"commissions\": \"36.34\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"36.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 179.00,\r\n                \"itemPrice\": 89.05,\r\n                \"originalPrice\": 179.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1004,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENBBCONT01\",\r\n                \"topModelLineReference\": \"ci7508000028\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 9.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 9.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1005,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSEN2BTRK01\",\r\n                \"topModelLineReference\": \"ci7508000028\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 14.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 14.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1006,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENBODIINS01\",\r\n                \"topModelLineReference\": \"ci7508000028\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 20.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 20.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1002\",\r\n                \"itemNumber\": \"MDUSENSHKCUP01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 6.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDUSENTSPBODI01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 89.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1004\",\r\n                \"itemNumber\": \"MDUSENBBCONT01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 9.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1005\",\r\n                \"itemNumber\": \"MDUSEN2BTRK01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 14.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1006\",\r\n                \"itemNumber\": \"MDUSENBODIINS01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 20.00,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing Partner - Order placement for Performance HD + special offer that are HD- US",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_shacus@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailSH1\", Email)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidSH1\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailSH1}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER,COACH</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_CA</preferredLanguage>\r\n                    <telephoneNumber>{{Phone}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID US",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDSH1\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDSH1\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidSH1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefSH\"))",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											"setTimeout(function(){}, [3000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefSH\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefSH}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 39.95,\r\n        \"orderShAmount\": 0.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 3.20,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSH1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefSH}}\",\r\n            \"customerType\": \"REGISTEREDUSER,COACH\",\r\n            \"gncCustomerId\": \"{{customerIDSH1}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC Web\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"SHAC Web\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailSH1}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC Web\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDMISCBSK1\",\r\n                \"originalPrice\": 39.95,\r\n                \"retailPrice\": 39.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 39.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Performance HD + special offer that are HD",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefSH1\",sysnumber);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Order placement for Performance HD + special offer that are HD shac web : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidSH1\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefSH1\")\r",
											"const email=pm.collectionVariables.get(\"emailSH1\");\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for Performance HD + special offer that are HD SHAC WEB US - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"// pm.globals.set(`GUID_${iterno+1} -> `+guid,`OrderNumber_${iterno+1} -> ${\"QE_\"+orderid}`,\"*\"+`${iterno+1}`)\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefSH1}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH1}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n       \"orderSubtotal\": 96.03,\r\n        \"orderShAmount\": 5.00,\r\n         \"orderTaxAmount\": 7.02,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 7.02,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSH1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH1}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefSH1}}\",\r\n            \"customerType\": \"COACH\",\r\n            \"gncCoachId\": \"{{sponsorID}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailSH1}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDSUBBP3108\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"33.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 54.95,\r\n                \"itemPrice\": 43.96,\r\n                \"originalPrice\": 54.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 2,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDSUBBP3110\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"27.00\",\r\n                \"cv\": \"19.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 33.26,\r\n                \"itemPrice\": 26.60,\r\n                \"originalPrice\": 36.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 3,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDBAR3116\",\r\n                \"lineReference\": \"ci7674000025\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"30.00\",\r\n                \"cv\": \"13.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 31.84,\r\n                \"itemPrice\": 25.47,\r\n                \"originalPrice\": 39.80,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 3002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDBAR3114\",\r\n                \"topModelLineReference\": \"ci7674000025\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            }\r\n        \r\n\r\n        ],\r\n         \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"1\",\r\n                \"itemNumber\": \"MDSUBBP3108\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 10.99,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"2\",\r\n                \"itemNumber\": \"MDSUBBP3110\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 7.39,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"SPECIAL_OFFER_DISCOUNT\",\r\n                \"lineNumber\": \"2\",\r\n                \"itemNumber\": \"MDSUBBP3110\",\r\n                \"promotionId\": \"BBPHydrateUC\",\r\n                \"discountAmount\": 2.96,\r\n                \"promoDesc\": \"BBPHydrate Special Offer - USCA Free Shipping\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TIER_DISCOUNT\",\r\n                \"lineNumber\": \"3\",\r\n                \"itemNumber\": \"MDBAR3116\",\r\n                \"promotionId\": \"COACH\",\r\n                \"discountAmount\": 7.96,\r\n                \"promoDesc\": \"TIER_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"SPECIAL_OFFER_DISCOUNT\",\r\n                \"lineNumber\": \"3\",\r\n                \"itemNumber\": \"MDBAR3116\",\r\n                \"promotionId\": \"BBarAllOptionsUCGF\",\r\n                \"discountAmount\": 6.37,\r\n                \"promoDesc\": \"BBarAllOptions Special Offer - USCAGBFR Free Shipping\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Upgrade: Existing customer - Order placement for PC and 99 bundle  (shac web)",
					"item": [
						{
							"name": "Usercreation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_shacus@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailSH2\", Email) "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidSH2\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailSH2}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>PC,REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_CA</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GNCID US",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"coachIDUSSH\", jsonData.searchUser.gncCoachID);\r",
											"pm.collectionVariables.set(\"customerIDSSH\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('coachIDUSSH > > ' +pm.collectionVariables.get(\"coachIDUSSH\"));\r",
											"console.log('customerIDSSH > > ' +pm.collectionVariables.get(\"customerIDSSH\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCoachID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidSH2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`OI Payload : `+ payload)",
											"pm.test(\"validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"console.log(\"Order placement (pre-requisite) -> order created >>> QE_\"+pm.collectionVariables.get(\"origSysDocumentRefSH3\"))",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefSH3\",sysnumber);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefSH3}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH3}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 129.95,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSH2}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH3}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefSH3}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDSSH}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailSH2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH3}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDSHK0202N1E102\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for PC and BODi + Shakelogy Monthly Pack",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body",
											"console.log(`Payload for  Order placement for PC and BODi + Shakelogy Monthly Pack - SHAC WEB US : `+ payload)",
											"// Status code validation script",
											"pm.test(\"Validation of Status code is 200\", function () {",
											"if (pm.response.code === 200) {",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");",
											"",
											"} else {",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);",
											"    pm.execution.setNextRequest(null);",
											"   // postman.setNextRequest(null);",
											"}",
											"})",
											"",
											"//unsetting the skuids",
											"",
											"for (let i = 0; i < 8; i++) {",
											"pm.collectionVariables.unset(\"id\"+i);",
											"}",
											"const iterno = pm.collectionVariables.get(\"iterno\");",
											"const guid = pm.collectionVariables.get(\"guidSH2\");",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefSH4\")",
											"const email=pm.collectionVariables.get(\"emailSH2\");",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);",
											"console.log(`Order placement for Order placement for PC and BODi + Shakelogy Monthly Pack SHAC WEB US - iteration ${iterno+1}`);",
											"console.log(`GUID : ${guid}`);",
											"console.log(`Email : ${email}`);",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);",
											"// pm.globals.set(`GUID_${iterno+1} -> `+guid,`OrderNumber_${iterno+1} -> ${\"QE_\"+orderid}`,\"*\"+`${iterno+1}`)",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefSH4\",sysnumber);\r",
											"\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid3\")\r",
											"\r",
											"// Split the CSV data into rows\r",
											"const rows = csvData.trim().split('\\n');\r",
											"\r",
											"// Initialize an array to store the extracted Skuids\r",
											"const skuids = [];\r",
											"\r",
											"// Iterate over each row\r",
											"rows.forEach(row => {\r",
											"    // Split the row by comma to extract the Skuid\r",
											"    const skuid = row.trim().replace(',', ''); // Remove trailing comma if present\r",
											"    skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 5; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"//pm.collectionVariables.set(\"id0\",skuids[0])\r",
											"\r",
											"console.log('Extracted Skuid:', skuids);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefSH4}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSH4}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"{{ShipMethod}}\",\r\n        \"orderSubtotal\": 99.00,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 9.37,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 9.37,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7147123359236923003954\",\r\n        \"referenceValue\": \"STORE_576775133\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"USD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSH2}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefSH4}}\",\r\n            \"customerType\": \"PC\",\r\n            \"gncCoachId\": \"{{coachIDUSSH}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailSH2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENTSP2\",\r\n                \"lineReference\": \"ci13447001299\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1001,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENSHK3102\",\r\n                \"lineReference\": \"ci13447001300\",\r\n                \"topModelLineReference\": \"ci13447001299\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"55.00\",\r\n                \"cv\": \"24.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"22.62\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 99.00,\r\n                \"itemPrice\": 87.00,\r\n                \"originalPrice\": 99.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100101,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENSHKBAG305\",\r\n                \"topModelLineReference\": \"ci13447001300\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDUSENTSPBODI03\",\r\n                \"topModelLineReference\": \"ci13447001299\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"8.00\",\r\n                \"cv\": \"3.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"3.12\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 35.00,\r\n                \"itemPrice\": 12.00,\r\n                \"originalPrice\": 35.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"US-REGISTEREDUSER-USD\",\r\n                \"itemNumber\": \"MDPCMEMBER2\",\r\n                \"topModelLineReference\": \"ci13447001299\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 0.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 0.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1001\",\r\n                \"itemNumber\": \"MDUSENSHK3102\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 12.00,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1002\",\r\n                \"itemNumber\": \"MDUSENTSPBODI03\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 23.00,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CA",
			"item": [
				{
					"name": "New customer - Order placement for BODi Essentials TSP- CA",
					"item": [
						{
							"name": "Usercreation CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function randomStringAlphabets(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\r",
											"{\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"var fname = randomStringAlphabets(7,7);\r",
											"console.log(`fname >> `+fname);\r",
											"var lname = randomStringAlphabets(8,8);\r",
											"console.log(`lname >> `+lname);\r",
											"var userName=fname+\"_\"+lname;\r",
											"console.log(`userName >> `+userName);\r",
											"pm.collectionVariables.set(\"fname\", fname)\r",
											"pm.collectionVariables.set(\"lname\", lname)\r",
											"pm.collectionVariables.set(\"username\", userName)\r",
											"\r",
											"function generateRandom5DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 90000);\r",
											"}\r",
											"\r",
											"var randomNumber = generateRandom5DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var Email= fname+lname+\"_shcasp@beachbodytest.com\";\r",
											"\r",
											"pm.collectionVariables.set(\"email\", Email)\r",
											"const moment = require('moment');\r",
											"pm.collectionVariables.set(\"todayDate\", moment().format(\"YYYY/MM/DD\"));\r",
											"console.log(`EMAIL >>>> `+Email +\" ::: date >>>\"+pm.collectionVariables.get(\"todayDate\"));\r",
											"pm.collectionVariables.set(\"emailSHCA\", Email)\r",
											"\r",
											"\r",
											" \r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidSHCA\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"console.log(`****************** Customer Creation API **************`);\r",
											"    console.log(`RESPONSE <<<<<< `+responseBody);\r",
											"    console.log(`******************  Customer Creation API **************`);\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{fname}}</firstName>\r\n                    <lastName>{{lname}}</lastName>\r\n                    <username>{{username}}</username>\r\n                    <email>{{emailSHCA}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>{{Gender}}</gender>\r\n                    <customerType>REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_CA</preferredLanguage>\r\n                    <telephoneNumber>{{TelephoneNumber}}</telephoneNumber>\r\n                    <startDate>{{todayDate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "SHGNCID CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDSHCA\", jsonData.searchUser.gncCustomerID);\r",
											"pm.collectionVariables.set(\"sponsorID\", jsonData.searchUser.sponsorREPID);\r",
											"console.log('gncCustomerID > > ' +pm.collectionVariables.get(\"customerIDSHCA\"));\r",
											"console.log('sponsorREPID > > ' +pm.collectionVariables.get(\"sponsorID\"));\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.collectionVariables.get(\"fname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [10000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidSHCA}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for BODi Essentials TSP CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefSHCA\",sysnumber);\r",
											"setTimeout(function(){}, [3000]);\r",
											"pm.collectionVariables.set(\"timestamp\",(new Date()).toISOString());\r",
											"console.log(\"timestampUtcIso8601 >> \"+pm.collectionVariables.get(\"timestamp\"));\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid1\");\r",
											"\r",
											"// Split the CSV data into rows\r",
											"const rows = csvData.trim().split('\\n');\r",
											"\r",
											"// Initialize an array to store the extracted Skuids\r",
											"const skuids = [];\r",
											"\r",
											"// Iterate over each row\r",
											"rows.forEach(row => {\r",
											"    // Split the row by comma to extract the Skuid\r",
											"    const skuid = row.trim().replace(',', ''); // Remove trailing comma if present\r",
											"    skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 8; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"//pm.collectionVariables.set(\"id1\",skuids[0])\r",
											"\r",
											"console.log('Extracted Skuid:', skuids);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Growthday Pro Annual membership : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.error(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"//unsetting the skuids\r",
											"\r",
											"for (let i = 0; i < 8; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidSHCA\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefSHCA\")\r",
											"const email=pm.collectionVariables.get(\"emailSHCA\");\r",
											"\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"console.log(`Order placement for BODi Essentials TSP CA SHAC WEB - iteration ${iterno+1}`);\r",
											"console.log(`GUID : ${guid}`);\r",
											"console.log(`Email : ${email}`);\r",
											"console.log(`Order (ORIG_SYS_DOCUMENT_REF) : ${\"QE_\"+orderid}`);\r",
											"console.log(`----------- Iteration >>>> ${iterno+1} ------------`);\r",
											"pm.globals.set(`GUID_${iterno+1} -> `+guid,`OrderNumber_${iterno+1} -> ${\"QE_\"+orderid}`,\"*\"+`${iterno+1}`)\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefSHCA}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefSHCA}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"Canada Standard\",\r\n        \"orderSubtotal\": 257.00,\r\n        \"orderShAmount\": 5.00,\r\n        \"commissionableOrder\": \"TBB_NO_COACH_PICK\",\r\n        \"orderTaxAmount\": 39.23,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 39.23,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7101462466546675903955\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefSHCA}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSHCA}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefSHCA}}\",\r\n            \"customerType\": \"CLUB\",\r\n            \"gncCustomerId\": \"{{customerIDSHCA}}\",\r\n            \"gncSponsorId\": \"{{sponsorID}}\",\r\n            \"firstName\": \"{{fname}}\",\r\n            \"lastName\": \"{{lname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailSHCA}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENTSP2\",\r\n                \"lineReference\": \"ci7489000269\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1001,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHK3101\",\r\n                \"lineReference\": \"ci7489000270\",\r\n                \"topModelLineReference\": \"ci7489000269\",\r\n                \"commissions\": \"31.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"98.00\",\r\n                \"cv\": \"33.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 155.95,\r\n                \"itemPrice\": 155.95,\r\n                \"originalPrice\": 155.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100101,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCASHKBAG302\",\r\n                \"topModelLineReference\": \"ci7489000270\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHKCUP01\",\r\n                \"topModelLineReference\": \"ci7489000269\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 8.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 8.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENTSPBODI01\",\r\n                \"topModelLineReference\": \"ci7489000269\",\r\n                \"commissions\": \"36.34\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"42.00\",\r\n                \"cv\": \"36.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 215.00,\r\n                \"itemPrice\": 101.05,\r\n                \"originalPrice\": 215.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1004,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENBBCONT01\",\r\n                \"topModelLineReference\": \"ci7489000269\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 11.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 11.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1005,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAEN2BTRK01\",\r\n                \"topModelLineReference\": \"ci7489000269\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 17.95,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 17.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1006,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENBODIINS01\",\r\n                \"topModelLineReference\": \"ci7489000269\",\r\n                \"commissions\": \"0.0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 24.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 24.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n            \r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1002\",\r\n                \"itemNumber\": \"MDCAENSHKCUP01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 8.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1003\",\r\n                \"itemNumber\": \"MDCAENTSPBODI01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 113.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1004\",\r\n                \"itemNumber\": \"MDCAENBBCONT01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 11.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1005\",\r\n                \"itemNumber\": \"MDCAEN2BTRK01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 17.95,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1006\",\r\n                \"itemNumber\": \"MDCAENBODIINS01\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 24.00,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            }\r\n            \r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing Partner - Order placement for Performance HD + special offer that are HD- CA",
					"item": [
						{
							"name": "Usercreation CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"\r",
											"function generateRandom4DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 9000);\r",
											"}\r",
											"var randomNumber = generateRandom4DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var extfname=pm.iterationData.get('Firstname');\r",
											"var extlastname=pm.iterationData.get('Lastname');\r",
											"var Email= extfname+extlastname+randomNumber+\"@beachbodytest.com\";\r",
											"pm.collectionVariables.set(\"emailSHCA1\", Email)\r",
											"\r",
											"\r",
											" \r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidSHCA1\", jsondata.guid);\r",
											"\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{Firstname}}</firstName>\r\n                    <lastName>{{Lastname}}</lastName>\r\n                    <username>{{Username}}</username>\r\n                    <email>{{emailSHCA1}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>Male</gender>\r\n                    <customerType>REGISTEREDUSER,CLUB</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_CA</preferredLanguage>\r\n                    <telephoneNumber>{{Phone}}</telephoneNumber>\r\n                    <startDate>{{Startdate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "SHGNCID CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"customerIDSHCA1\", jsonData.searchUser.gncCustomerID);\r",
											"\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.iterationData.get(\"Firstname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidSHCA1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefCA1\",sysnumber);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload for  Growthday Pro Annual membership : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"COMMERCE_ORDER_DR\",\r\n    \"creationDate\": \"{{Timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefCA1}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA1}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{Timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"CommissionableOrder\": \"LEAD_RULE\",\r\n        \"shipMethodCode\": \"Canada Standard\",\r\n        \"orderSubtotal\": 155.95,\r\n        \"orderShAmount\": 23.39,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 23.31,\r\n        \"orderTaxAmount\": 23.31,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"0932253342096140093420\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n         \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSHCA1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA1}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefCA1}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDSHCA1}}\",\r\n            \"gncSponsorId\": \"{{Sponsorrepid}}\",\r\n            \"firstName\": \"{{Firstname}}\",\r\n            \"lastName\": \"{{Lastname}}\",\r\n             \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailSHCA1}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA1}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"{{Skupre}}\",\r\n                \"originalPrice\": 155.95,\r\n                \"retailPrice\": 155.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 155.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for Performance HD + special offer that are HD",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefCA2\",sysnumber);\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload : `+ payload)\r",
											"pm.test(\"validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidSHCA1\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefCA2\")\r",
											"const email=pm.collectionVariables.get(\"emailSHCA1\");\r",
											"\r",
											"console.log(`GUID of Order placement for Performance HD + special offer that are HD(CA) for iteration ${iterno+1}: ${guid}`);\r",
											"console.log(`Email of Order placement for Performance HD + special offer that are HD(CA)for iteration ${iterno+1}: ${email}`);\r",
											"console.log(`Order ID of Order placement for Performance HD + special offer that are HD(CA)for iteration ${iterno+1}: ${\"QE_\"+orderid}`);\r",
											"pm.globals.set(`GUID_${iterno+1} -> `+guid,`OrderNumber_${iterno+1} -> ${\"QE_\"+orderid}`,\"*\"+`${iterno+1}`)\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "CkENBB6yZH3fxtFJRu2B09FQSvnZ0BMN8mZk6Son"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{Timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefCA2}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA2}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{Timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT\",\r\n        \"shipMethodCode\": \"Canada Standard\",\r\n        \"orderSubtotal\": 259.9,\r\n        \"orderShAmount\": 3.00,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 0.00,\r\n        \"orderTaxAmount\": 0.00,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"6189278216976179003001\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{Firstname}} {{Lastname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"commissionableOrder\": \"BB_NO_COACH_PICK\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSHCA1}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA2}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefCA2}}\",\r\n            \"customerType\": \"CLUB\",\r\n            \"gncCustomerId\": \"{{customerIDSHCA1}}\",\r\n            \"gncSponsorId\": \"{{Sponsorrepid}}\",\r\n            \"firstName\": \"{{Firstname}}\",\r\n            \"lastName\": \"{{Lastname}}\",\r\n           \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n             \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailSHCA1}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"SHAC WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA2}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"{{Skuid2}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA2}}\",\r\n                \"lineNumber\": 2,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"{{Skuid2.1}}\",\r\n                \"originalPrice\": 129.95,\r\n                \"retailPrice\": 129.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"90.00\",\r\n                \"pv\": \"90.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 129.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Existing customer - Order placement for PC and BODi + Shakelogy Monthly Pack (SHAC WEB)- CA",
					"item": [
						{
							"name": "Usercreation CA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"ENVironment >>>>\"+pm.environment.name);\r",
											"pm.collectionVariables.set(\"ENV\",pm.environment.name);\r",
											"function generateRandom4DigitNumber() {\r",
											"    \r",
											"    return Math.floor(1000 + Math.random() * 9000);\r",
											"}\r",
											"var randomNumber = generateRandom4DigitNumber();\r",
											"console.log(randomNumber);\r",
											"pm.collectionVariables.set(\"randomdigit\",randomNumber );\r",
											"\r",
											"var extfname=pm.iterationData.get('Firstname');\r",
											"var extlastname=pm.iterationData.get('Lastname');\r",
											"var Email= extfname+extlastname+randomNumber+\"@beachbodytest.com\";\r",
											"pm.collectionVariables.set(\"emailSHCA2\", Email)\r",
											"\r",
											"\r",
											" \r",
											" "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Create Identity Payload : `+ payload)\r",
											"console.log(`Create Identity API : `+ pm.request.url)\r",
											"//Extraction of guid\r",
											"var jsonObject = xml2Json(responseBody);\r",
											"\r",
											"var jsondata = jsonObject[\"S:Envelope\"][\"S:Body\"][\"ns2:createOIMIdentityResponse\"][\"create_identity_response\"];\r",
											"pm.collectionVariables.set(\"guidSHCA2\", jsondata.guid);\r",
											"var iterationIndex= pm.info.iteration;\r",
											"//Set the collection variables\r",
											"pm.collectionVariables.set(\"iterno\", iterationIndex);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " \r\n\r\n\r\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:prox=\"http://proxy.beachbody.com/\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <prox:createOIMIdentity>\r\n            <!--Optional:-->\r\n            <create_identity_request>\r\n                <!--Optional:-->\r\n                <user_account>\r\n                    <!--You may enter the following 39 items in any order-->\r\n                    <firstName>{{Firstname}}</firstName>\r\n                    <lastName>{{Lastname}}</lastName>\r\n                    <username>{{Username}}</username>\r\n                    <email>{{emailSHCA2}}</email>\r\n                    <password>{{Password}}</password>\r\n                    <dob>{{DOB}}</dob>\r\n                    <gender>Male</gender>\r\n                    <customerType>PC,REGISTEREDUSER</customerType>\r\n                    <sponsorREPID>{{Sponsorrepid}}</sponsorREPID>\r\n                    <preferredLanguage>en_CA</preferredLanguage>\r\n                    <telephoneNumber>{{Phone}}</telephoneNumber>\r\n                    <startDate>{{Startdate}}</startDate>\r\n                    <inputSystem>SOA_EBS</inputSystem>\r\n                    <govID xsi:nil=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>\r\n                    <billAddress1>{{BillAddress1}}</billAddress1>\r\n                    <billAddress2>{{BillAddress2}}</billAddress2>\r\n                    <billCity>{{BillCity}}</billCity>\r\n                    <billState>{{BillState}}</billState>\r\n                    <billPostalCode>{{BillPostalCode}}</billPostalCode>\r\n                    <billCountry>{{BillCountry}}</billCountry>\r\n                    <shipAddress1>{{ShipAddress1}}</shipAddress1>\r\n                    <shipAddress2>{{ShipAddress2}}</shipAddress2>\r\n                    <shipCity>{{ShipCity}}</shipCity>\r\n                    <shipState>{{ShipState}}</shipState>\r\n                    <shipPostalCode>{{ShipPostalCode}}</shipPostalCode>\r\n                    <shipCountry>{{ShipCountry}}</shipCountry>\r\n                    <termAndCondition>{{todayDate}}</termAndCondition>\r\n                    <preferredProduct>{{PreferredProduct}}</preferredProduct>\r\n                </user_account>\r\n            </create_identity_request>\r\n        </prox:createOIMIdentity>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/account",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "SHGNCID CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Save the gncCustomerID in collection variables\r",
											"var jsonData = pm.response.json();\r",
											"console.log(jsonData)\r",
											"pm.collectionVariables.set(\"coachIDCASH\", jsonData.searchUser.gncCoachID);\r",
											"\r",
											"// Save the current timestamp in the environment\r",
											"function Timestamp() {\r",
											"    const now = new Date();\r",
											"    const year = now.getFullYear();\r",
											"    const month = String(now.getMonth() + 1).padStart(2, '0');\r",
											"    const date = String(now.getDate()).padStart(2, '0');\r",
											"    const hours = String(now.getHours()).padStart(2, '0');\r",
											"    const minutes = String(now.getMinutes()).padStart(2, '0');\r",
											"    const seconds = String(now.getSeconds()).padStart(2, '0');\r",
											"    const milliseconds = String(now.getMilliseconds()).padStart(3, '0');\r",
											"\r",
											"    return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}.${milliseconds}`;\r",
											"}\r",
											"\r",
											"var currentTimestamp = Timestamp();\r",
											"pm.environment.set(\"Timestamp\", currentTimestamp);\r",
											"\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"// Test to validate the email, firstname, lastname, and username in the response\r",
											"pm.test(\"Response data validation\", function () {\r",
											"   \r",
											"   \r",
											"    pm.expect(jsonData.searchUser.firstName).to.eql(pm.iterationData.get(\"Firstname\"));\r",
											"    //pm.expect(jsonData.searchUser.gncCustomerID).to.be.a(Number);\r",
											"});\r",
											"\r",
											"\r",
											"// Test to validate if the response field is a number\r",
											"pm.test(\"Response body contains text\", function(){\r",
											"    try {\r",
											"        pm.expect(pm.response.text()).to.include(\"gncCustomerID\");\r",
											"    } catch (e) {\r",
											"        // If the assertion fails, stop any further requests\r",
											"        \r",
											"         pm.execution.setNextRequest(null)\r",
											"        throw e;  \r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{CreateUserUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"searchFilterName\": \"guid\",\r\n  \"searchFilterValue\": \"{{guidSHCA2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CreateUserUrl}}/searchIdentity",
									"host": [
										"{{CreateUserUrl}}"
									],
									"path": [
										"searchIdentity"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement (pre-requisite)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefCA01\",sysnumber);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload : `+ payload)\r",
											"// Status code validation script\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"COMMERCE_ORDER_DR\",\r\n    \"creationDate\": \"{{Timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefCA01}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA01}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{Timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"CommissionableOrder\": \"LEAD_RULE\",\r\n        \"shipMethodCode\": \"Canada Standard\",\r\n        \"orderSubtotal\": 155.95,\r\n        \"orderShAmount\": 23.39,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 23.31,\r\n        \"orderTaxAmount\": 23.31,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"0932253342096140093420\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2028-01-30\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{fname}} {{lname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSHCA2}}\",\r\n            \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA01}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefCA1}}\",\r\n            \"customerType\": \"REGISTEREDUSER\",\r\n            \"gncCustomerId\": \"{{customerIDSHCA2}}\",\r\n            \"gncSponsorId\": \"{{Sponsorrepid}}\",\r\n            \"firstName\": \"{{Firstname}}\",\r\n            \"lastName\": \"{{Lastname}}\",\r\n             \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n            \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"primary\": \"Y\",\r\n                    \"owner\": \"SHIP_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{emailSHCA2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"purpose\": \"\",\r\n                    \"primary\": \"\",\r\n                    \"owner\": \"BILL_TO\",\r\n                    \"sourceSystem\": \"TBB WEB\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA01}}\",\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"{{Skupre}}\",\r\n                \"originalPrice\": 155.95,\r\n                \"retailPrice\": 155.95,\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"cv\": \"0.00\",\r\n                \"pv\": \"0.00\",\r\n                \"qty\": 1,\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"hdTriggerFlag\": 0,\r\n                \"itemPrice\": 155.95,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order placement for PC and BODi + Shakelogy Monthly Pack CA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var payload=pm.request.body\r",
											"console.log(`Payload : `+ payload)\r",
											"\r",
											"pm.test(\"Validation of Status code is 200\", function () {\r",
											"if (pm.response.code === 200) {\r",
											"    console.log(\"Status code is 200: Proceeding to the next request.\");\r",
											"\r",
											"} else {\r",
											"    console.log(`Status code is ${pm.response.code}: Stopping the collection run.`);\r",
											"    pm.execution.setNextRequest(null);\r",
											"   // postman.setNextRequest(null);\r",
											"}\r",
											"})\r",
											"\r",
											"for (let i = 0; i < 5; i++) {\r",
											"pm.collectionVariables.unset(\"id\"+i);\r",
											"}\r",
											"const iterno = pm.collectionVariables.get(\"iterno\");\r",
											"const guid = pm.collectionVariables.get(\"guidSHCA2\");\r",
											"const orderid= pm.collectionVariables.get(\"origSysDocumentRefCA02\")\r",
											"const email=pm.collectionVariables.get(\"emailSHCA2\");\r",
											"\r",
											"console.log(`GUID of Order placement for PC and BODi + Shakelogy Monthly Pack(CA) for iteration ${iterno+1}: ${guid}`);\r",
											"console.log(`Email of Order placement for PC and BODi + Shakelogy Monthly Pack(CA)for iteration ${iterno+1}: ${email}`);\r",
											"console.log(`Order ID of Order placement for PC and BODi + Shakelogy Monthly Pack(CA)for iteration ${iterno+1}: ${\"QE_\"+orderid}`);\r",
											"\r",
											"pm.globals.set(`GUID_${iterno+1} -> `+guid,`OrderNumber_${iterno+1} -> ${\"QE_\"+orderid}`,\"*\"+`${iterno+1}`)\r",
											"\r",
											"pm.globals.set(guid,`${\"QE_\"+orderid}`)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function generateRandomNineDigitNumber() {\r",
											"    // Generate a random number between 100000000 (inclusive) and 999999999 (inclusive)\r",
											"    return Math.floor(Math.random() * 900000000) + 100000000;\r",
											"}\r",
											"var sysnumber =generateRandomNineDigitNumber();\r",
											"pm.collectionVariables.set(\"origSysDocumentRefCA02\",sysnumber);\r",
											"\r",
											"\r",
											"//Script to extract skuids\r",
											"\r",
											"// CSV data containing the list of Skuids\r",
											"const csvData = pm.iterationData.get(\"Skuid3\")\r",
											"\r",
											"// Split the CSV data into rows\r",
											"const rows = csvData.trim().split('\\n');\r",
											"\r",
											"// Initialize an array to store the extracted Skuids\r",
											"const skuids = [];\r",
											"\r",
											"// Iterate over each row\r",
											"rows.forEach(row => {\r",
											"    // Split the row by comma to extract the Skuid\r",
											"    const skuid = row.trim().replace(',', ''); // Remove trailing comma if present\r",
											"    skuids.push(skuid);\r",
											"});\r",
											"for (let i = 0; i < 5; i++) \r",
											"{\r",
											" pm.collectionVariables.set(\"id\"+ (i),skuids[i])\r",
											"}\r",
											"//pm.collectionVariables.set(\"id0\",skuids[0])\r",
											"\r",
											"console.log('Extracted Skuid:', skuids);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{OrderImportUrlXAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n\r\n{\r\n    \"environment\": \"{{ENV}}\",\r\n    \"orderFrom\": \"TBB\",\r\n    \"creationDate\": \"{{Timestamp}}\",\r\n    \"header\": {\r\n        \"sourceSystem\": \"SHAC WEB\",\r\n        \"correlationId\": \"QE_{{origSysDocumentRefCA02}}\",\r\n        \"origSysDocumentRef\": \"QE_{{origSysDocumentRefCA02}}\",\r\n        \"businessUnit\": \"NETWORK\",\r\n        \"orderDateTime\": \"{{Timestamp}}\",\r\n        \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n        \"orderType\": \"WEB ORDER_NT_CA\",\r\n        \"shipMethodCode\": \"Canada Standard\",\r\n        \"orderSubtotal\": 120.00,\r\n        \"orderShAmount\": 5.00,\r\n        \"orderTaxAmount\": 16.26,\r\n        \"orderTaxRate\": 0.0,\r\n        \"totalTaxAmount\": 16.26,\r\n        \"personalUse\": \"Y\",\r\n        \"priceSuppression\": \"N\",\r\n        \"zeroOutShakeolagy\": \"0\",\r\n        \"referenceCode\": \"7146067286126752703954\",\r\n        \"referenceValue\": \"QE_{{origSysDocumentRefCA02}}\",\r\n        \"ipAddress\": \"\",\r\n        \"sessionId\": \"\",\r\n        \"paymentPlanCode\": \"1 Pay\",\r\n        \"shippingInstructions\": \"\",\r\n        \"paymentTerm\": \"1 Pay\",\r\n        \"paymentMethod\": \"CREDIT_CARD\",\r\n        \"ccType\": \"{{CCType}}\",\r\n        \"ccNo\": \"{{CCNumber}}\",\r\n        \"expDate\": \"2027-03-28\",\r\n        \"authCode\": \"888888\",\r\n        \"holderNameOnCc\": \"{{Firstname}} {{Lastname}}\",\r\n        \"currencyCode\": \"CAD\",\r\n        \"customer\": {\r\n            \"guid\": \"{{guidSHCA2}}\",\r\n            \"customerNo\": \"{{origSysDocumentRefCA02}}\",\r\n            \"customerType\": \"PC\",\r\n            \"gncCoachId\": \"{{coachIDCASH}}\",\r\n            \"gncSponsorId\": \"{{Sponsorrepid}}\",\r\n            \"firstName\": \"{{Firstname}}\",\r\n            \"lastName\": \"{{Lastname}}\",\r\n            \"billToAddress1\": \"{{BillAddress1}}\",\r\n            \"billToAddress2\": \"{{BillAddress2}}\",\r\n            \"billToCity\": \"{{BillCity}}\",\r\n            \"billToState\": \"{{BillState}}\",\r\n            \"billToZipcode\": \"{{BillPostalCode}}\",\r\n            \"billToCountry\": \"{{BillCountry}}\",\r\n            \"shipToFirstName\": \"{{fname}}\",\r\n            \"shipToLastName\": \"{{lname}}\",\r\n            \"shipToAddress1\": \"{{ShipAddress1}}\",\r\n            \"shipToAddress2\": \"{{ShipAddress2}}\",\r\n            \"shipToCity\": \"{{ShipCity}}\",\r\n            \"shipToState\": \"{{ShipState}}\",\r\n            \"shipToZipcode\": \"{{ShipPostalCode}}\",\r\n             \"shipToCountry\": \"{{ShipCountry}}\",\r\n            \"communication\": [\r\n                {\r\n                    \"commValue\": \"{{emailSHCA2}}\",\r\n                    \"commType\": \"EMAIL\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"BILL_TO\"\r\n                },\r\n                {\r\n                    \"commValue\": \"{{TelephoneNumber}}\",\r\n                    \"commType\": \"GEN\",\r\n                    \"purpose\": \"DAY_PHONE\",\r\n                    \"owner\": \"SHIP_TO\"\r\n                }\r\n            ]\r\n        },\r\n        \"lines\": [\r\n            {\r\n                \"lineNumber\": 1,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENTSP2\",\r\n                \"lineReference\": \"ci7507000060\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1001,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHK3102\",\r\n                \"lineReference\": \"ci7507000061\",\r\n                \"topModelLineReference\": \"ci7507000060\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"55.00\",\r\n                \"cv\": \"24.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"22.62\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 118.80,\r\n                \"itemPrice\": 104.50,\r\n                \"originalPrice\": 118.80,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 100101,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENSHKBAG305\",\r\n                \"topModelLineReference\": \"ci7507000061\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0\",\r\n                \"pv\": \"0\",\r\n                \"cv\": \"0\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 0,\r\n                \"itemPrice\": 0,\r\n                \"originalPrice\": 0,\r\n                \"itemPaymentPlanCode\": \"1 Pay\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1002,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAENTSPBODI03\",\r\n                \"topModelLineReference\": \"ci7507000060\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"8.00\",\r\n                \"cv\": \"3.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"3.12\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"0\",\r\n                \"retailPrice\": 42.00,\r\n                \"itemPrice\": 15.50,\r\n                \"originalPrice\": 42.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            },\r\n            {\r\n                \"lineNumber\": 1003,\r\n                \"offerCode\": \"CA-REGISTEREDUSER-CAD\",\r\n                \"itemNumber\": \"MDCAPCMEMBER2\",\r\n                \"topModelLineReference\": \"ci7507000060\",\r\n                \"commissions\": \"0\",\r\n                \"subscriptionCommissions\": \"0.0\",\r\n                \"pv\": \"0.00\",\r\n                \"cv\": \"0.00\",\r\n                \"uom\": \"EA\",\r\n                \"fastStartAmount\": \"0.0\",\r\n                \"qty\": 1,\r\n                \"hdTriggerFlag\": \"1\",\r\n                \"retailPrice\": 0.00,\r\n                \"itemPrice\": 0.00,\r\n                \"originalPrice\": 0.00,\r\n                \"itemPaymentPlanCode\": \"1 Pay\",\r\n                \"primaryProductType\": \"GEN\",\r\n                \"sendToByd\": \"Y\"\r\n            }\r\n        ],\r\n        \"adjustment\": [\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1001\",\r\n                \"itemNumber\": \"MDCAENSHK3102\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 14.30,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            },\r\n            {\r\n                \"adjustmentLevel\": \"LINE\",\r\n                \"adjustmentType\": \"TSP_DISCOUNT\",\r\n                \"lineNumber\": \"1002\",\r\n                \"itemNumber\": \"MDCAENTSPBODI03\",\r\n                \"promotionId\": \"TSP_DISCOUNT\",\r\n                \"discountAmount\": 26.50,\r\n                \"promoDesc\": \"TSP_DISCOUNT\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{OrderImportUrl}}/orders/import",
									"host": [
										"{{OrderImportUrl}}"
									],
									"path": [
										"orders",
										"import"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "randomdigit",
			"value": ""
		},
		{
			"key": "emailSHCA2",
			"value": ""
		},
		{
			"key": "guidSHCA2",
			"value": ""
		},
		{
			"key": "iterno",
			"value": ""
		},
		{
			"key": "coachIDCASH",
			"value": ""
		},
		{
			"key": "origSysDocumentRefCA01",
			"value": ""
		},
		{
			"key": "origSysDocumentRefCA02",
			"value": ""
		},
		{
			"key": "emailSH2",
			"value": ""
		},
		{
			"key": "guidSH2",
			"value": ""
		},
		{
			"key": "coachIDUSSH",
			"value": ""
		},
		{
			"key": "origSysDocumentRefSH3",
			"value": ""
		},
		{
			"key": "origSysDocumentRefSH4",
			"value": ""
		},
		{
			"key": "emailSH",
			"value": ""
		},
		{
			"key": "guidSH",
			"value": ""
		},
		{
			"key": "customerIDSH",
			"value": ""
		},
		{
			"key": "origSysDocumentRefSH",
			"value": ""
		},
		{
			"key": "emailSH1",
			"value": ""
		},
		{
			"key": "guidSH1",
			"value": ""
		},
		{
			"key": "customerIDSH1",
			"value": ""
		},
		{
			"key": "origSysDocumentRefSH1",
			"value": ""
		},
		{
			"key": "origSysDocumentRefSH2",
			"value": ""
		},
		{
			"key": "emailSHCA",
			"value": ""
		},
		{
			"key": "guidSHCA",
			"value": ""
		},
		{
			"key": "customerIDSHCA",
			"value": ""
		},
		{
			"key": "origSysDocumentRefSHCA",
			"value": ""
		},
		{
			"key": "emailSHCA1",
			"value": ""
		},
		{
			"key": "guidSHCA1",
			"value": ""
		},
		{
			"key": "customerIDSHCA1",
			"value": ""
		},
		{
			"key": "origSysDocumentRefCA1",
			"value": ""
		},
		{
			"key": "origSysDocumentRefCA2",
			"value": ""
		}
	]
}